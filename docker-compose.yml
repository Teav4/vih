version: '3.8'

services:
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - manga-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - manga-network

  crawler:
    build:
      context: ./crawler
      dockerfile: Dockerfile
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      MONGODB_URI: "mongodb://root:example@mongodb:27017"
      REDIS_ADDR: "redis:6379"
    networks:
      - manga-network
    # Remove restart option temporarily for debugging
    restart: "no"
    # Add tty and stdin_open for debugging
    tty: true
    stdin_open: true

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "50051:50051" # gRPC
      - "8080:8080"   # REST
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      MONGODB_URI: "mongodb://root:example@mongodb:27017"
      REDIS_URI: "redis://redis:6379"
    networks:
      - manga-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - manga-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 3s
      retries: 3
    restart: unless-stopped

volumes:
  mongodb_data:
  redis_data:

networks:
  manga-network:
    driver: bridge
